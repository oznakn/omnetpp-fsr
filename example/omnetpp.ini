[General]
network = FSRNetwork
sim-time-limit = 1000s

**.ipv4.arp.typename = "GlobalArp"
**.ipv4.forwarding = true

**.wlan[0].typename = "AckingWirelessInterface"
# **.wlan[0].bitrate = ${800, 1200, 1400, 1600, 2000}kbps
**.wlan[0].bitrate = 2000kbps
**.wlan[0].mac.useAck = false
**.wlan[0].mac.fullDuplex = false
**.wlan[0].radio.transmitter.communicationRange = 150m
**.wlan[0].radio.receiver.ignoreInterference = true
**.wlan[0].mac.headerLength = 23B
**.maxTransmissionDuration = 3s

# mobility
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m

# lifecycle
**.hasStatus = true

# *.scenarioManager.script = xmldoc("scenario.xml")

[Config Base]
extends = General

[Config FSRAD]
extends = Base

*.hostA.numApps = 1
*.hostA.app[0].typename = "UdpBasicApp"
*.hostA.app[0].destAddresses = "hostD"
*.hostA.app[0].destPort = 5000
*.hostA.app[0].messageLength = 1000B
*.hostA.app[0].sendInterval = 120ms
*.hostA.app[0].packetName = "UDPData"
*.hostA.app[0].startTime = 50s

*.hostD.numApps = 1
*.hostD.app[0].typename = "UdpSink"
*.hostD.app[0].localPort = 5000

[Config FSRNetworkA]
extends = FSRAD

network = FSRNetworkA

*.hostA.fsr.neighbors = "hostB hostC"
*.hostB.fsr.neighbors = "hostA hostC hostD"
*.hostC.fsr.neighbors = "hostA hostB hostD"
*.hostD.fsr.neighbors = "hostB hostC"

[Config FSRNetworkB]
extends = FSRAD

network = FSRNetworkB

*.hostA.fsr.neighbors = "hostB"
*.hostB.fsr.neighbors = "hostA hostC"
*.hostC.fsr.neighbors = "hostB hostD"
*.hostD.fsr.neighbors = "hostC"


[Config FSRNetworkC]
extends = FSRAD

network = FSRNetworkC

*.hostA.fsr.neighbors = "hostB hostC hostD"
*.hostB.fsr.neighbors = "hostA hostC hostD"
*.hostC.fsr.neighbors = "hostA hostB hostD"
*.hostD.fsr.neighbors = "hostA hostB hostC"

[Config FSRNetworkD]
extends = FSRAD

network = FSRNetworkD

*.hostA.fsr.neighbors = "hostB hostC hostD"
*.hostB.fsr.neighbors = "hostA hostC hostD"
*.hostC.fsr.neighbors = "hostA hostB hostD"
*.hostD.fsr.neighbors = "hostA hostB hostC"

[Config FSRNetworkE]
extends = Base

network = FSRNetworkE

*.hostA.fsr.neighbors = "hostB hostC"
*.hostB.fsr.neighbors = "hostC hostD"
*.hostC.fsr.neighbors = "hostA hostD hostF"
*.hostD.fsr.neighbors = "hostB hostC"

*.hostE.fsr.neighbors = "hostF hostG"
*.hostF.fsr.neighbors = "hostC hostE hostH"
*.hostG.fsr.neighbors = "hostE hostH"
*.hostH.fsr.neighbors = "hostF hostG"

**.wlan[0].radio.transmitter.communicationRange = 200m

*.hostB.numApps = 1
*.hostB.app[0].typename = "UdpBasicApp"
*.hostB.app[0].destAddresses = "hostF"
*.hostB.app[0].destPort = 5000
*.hostB.app[0].messageLength = 1000B
*.hostB.app[0].sendInterval = 120ms
*.hostB.app[0].packetName = "UDPData"
*.hostB.app[0].startTime = 50s

*.hostF.numApps = 1
*.hostF.app[0].typename = "UdpSink"
*.hostF.app[0].localPort = 5000

[Config FSRNetworkF]
extends = Base

network = FSRNetworkF

# 20 hosts
*.host[0].fsr.neighbors = "host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[1].fsr.neighbors = "host[0] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[2].fsr.neighbors = "host[0] host[1] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[3].fsr.neighbors = "host[0] host[1] host[2] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[4].fsr.neighbors = "host[0] host[1] host[2] host[3] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[5].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[6].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[7].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[8].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[9].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[10].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[11].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[12] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[12].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[13] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[13].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[14] host[15] host[16] host[17] host[18] host[19]"
*.host[14].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[15] host[16] host[17] host[18] host[19]"
*.host[15].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[16] host[17] host[18] host[19]"
*.host[16].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[17] host[18] host[19]"
*.host[17].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[18] host[19]"
*.host[18].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[19]"
*.host[19].fsr.neighbors = "host[0] host[1] host[2] host[3] host[4] host[5] host[6] host[7] host[8] host[9] host[10] host[11] host[12] host[13] host[14] host[15] host[16] host[17] host[18]"

*.host[0].numApps = 1
*.host[0].app[0].typename = "UdpBasicApp"
*.host[0].app[0].destAddresses = "host[19]"
*.host[0].app[0].destPort = 5000
*.host[0].app[0].messageLength = 1000B
*.host[0].app[0].sendInterval = 120ms
*.host[0].app[0].packetName = "UDPData"
*.host[0].app[0].startTime = 50s

*.host[19].numApps = 1
*.host[19].app[0].typename = "UdpSink"
*.host[19].app[0].localPort = 5000


[Config FSRNetworkATest]
extends = FSRNetworkA
repeat = 50

[Config FSRNetworkBTest]
extends = FSRNetworkB
repeat = 50

[Config FSRNetworkCTest]
extends = FSRNetworkC
repeat = 50

[Config FSRNetworkDTest]
extends = FSRNetworkD
repeat = 50

[Config FSRNetworkETest]
extends = FSRNetworkE
repeat = 50

[Config FSRNetworkFTest]
extends = FSRNetworkF
repeat = 50


[Config FSRNetworkLoad]
extends = FSRNetworkE

*.hostB.app[0].sendInterval = ${30ms, 50ms, 100ms, 200ms, 500ms, 1000ms, 2000ms}

[Config FSRNetworkLoadTest]
extends = FSRNetworkLoad
repeat = 50

[Config FSRNetworkAMobility]
extends = FSRNetworkA

*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true

*.hostB.mobility.typename = "CircleMobility"

*.hostB.mobility.cx = 250m
*.hostB.mobility.cy = 400m
*.hostB.mobility.r = 80m
*.hostB.mobility.speed = 60mps
*.hostB.mobility.startAngle = 0deg

*.hostC.mobility.typename = "CircleMobility"

*.hostC.mobility.cx = 350m
*.hostC.mobility.cy = 400m
*.hostC.mobility.r = 80m
*.hostC.mobility.speed = -60mps
*.hostC.mobility.startAngle = 0deg


[Config FSRNetworkBMobility]
extends = FSRNetworkB

*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true

*.hostB.mobility.typename = "CircleMobility"

*.hostB.mobility.cx = 250m
*.hostB.mobility.cy = 400m
*.hostB.mobility.r = 80m
*.hostB.mobility.speed = 60mps
*.hostB.mobility.startAngle = 0deg

*.hostC.mobility.typename = "CircleMobility"

*.hostC.mobility.cx = 350m
*.hostC.mobility.cy = 400m
*.hostC.mobility.r = 80m
*.hostC.mobility.speed = -60mps
*.hostC.mobility.startAngle = 0deg

[Config FSRNetworkCMobility]
extends = FSRNetworkC

*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true

*.hostB.mobility.typename = "CircleMobility"

*.hostB.mobility.cx = 250m
*.hostB.mobility.cy = 400m
*.hostB.mobility.r = 80m
*.hostB.mobility.speed = 60mps
*.hostB.mobility.startAngle = 0deg

*.hostC.mobility.typename = "CircleMobility"

*.hostC.mobility.cx = 350m
*.hostC.mobility.cy = 400m
*.hostC.mobility.r = 80m
*.hostC.mobility.speed = -60mps
*.hostC.mobility.startAngle = 0deg


[Config FSRNetworkAMobilityTest]
extends = FSRNetworkAMobility
repeat = 50

[Config FSRNetworkBMobilityTest]
extends = FSRNetworkBMobility
repeat = 50

[Config FSRNetworkCMobilityTest]
extends = FSRNetworkCMobility
repeat = 50
